/*
 * Copyright (c) 2021 2bllw8
 * SPDX-License-Identifier: GPL-3.0-only
 */
plugins {
    id 'com.android.application'
    id "com.diffplug.spotless" version "6.5.1"
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk targetSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1718826000
        versionName "2024.06.19"
        applicationId 'alt.nainapps.aer'
    }

    buildFeatures {
        buildConfig = false
    }

    compileOptions {
        sourceCompatibility sourceCompatibilityVersion
        targetCompatibility targetCompatibilityVersion
    }

    dependenciesInfo {
        includeInApk false
    }

    signingConfigs {
        if (rootProject.ext.keyStoreFile != null && rootProject.ext.keyStoreFile.exists()) {
            anemo {
                storeFile file(rootProject.ext.keyStoreFile)
                storePassword rootProject.ext.keyStorePassword
                keyAlias rootProject.ext.keyAlias
                keyPassword rootProject.ext.keyPassword
            }
        }
    }

    buildTypes {
        def useAnemoConfig = rootProject.ext.keyStoreFile != null
                && rootProject.ext.keyStoreFile.exists()

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

            if (useAnemoConfig) {
                signingConfig signingConfigs.named('anemo').get()
            }
        }
        debug {
            applicationIdSuffix '.debug'
            signingConfig signingConfigs.debug
            if (useAnemoConfig) {
                signingConfig signingConfigs.named('anemo').get()
            }
        }
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    namespace 'alt.nainapps.aer'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    def androidxAnnotation = 'androidx.annotation:annotation:1.8.0'
    def eitherLib = 'io.github.2bllw8:either:3.4.0'

    implementation androidxAnnotation
    implementation eitherLib
}

afterEvaluate {
    def spotlessCheck = tasks.named('spotlessCheck')
    if (spotlessCheck) {
        tasks.withType(JavaCompile).tap {
            configureEach {
                finalizedBy(spotlessCheck)
            }
        }
    }
}
